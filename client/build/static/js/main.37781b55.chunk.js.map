{"version":3,"sources":["Components/navbar.js","form.js","Search.js","App.js","serviceWorker.js","index.js"],"names":["NavBar","class","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","options","label","value","options0","options1","Form","onButtonCLickHandler","state","smallBusiness","address","website","companyTech","poc","emailinfo","phoneinfo","titleSTTR","descripSTTR","princInv","businessSplit","cctiSplit","cctiprovide","mou","nda","ipADD","cycleSubmit","topicID","sttrID","phaseType","stateOfProject","display","componentDidMount","getblogpost","axios","get","then","response","data","setState","posts","console","log","catch","alert","handleChange","target","name","submit","event","preventDefault","payload","project","url","method","resetUserInputs","swal","className","this","onSubmit","placeholder","onChange","cols","rows","style","clear","marginLeft","color","map","option","onClick","React","Component","mouOptions","ndaOptions","ipOptions","phaseOptions","stateOptions","criteriaOptions","Search","title","justTitles","justMous","justNda","justIp","justPhase","justState","criteria","ip","phase","query","titles","post","index","i","length","getBlogPost","handleChange1","resertUserInputs","body","smallbusiness","displayBlogPost","key","fieldDropdown","counts","mouBusiness","count","ndaBusiness","ipBusiness","phaseBusiness","stateBusiness","tempBusiness","tempMou","tempNda","tempIp","tempPhase","tempState","displayBusiness","displayQuery","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.37781b55.chunk.js","sourcesContent":["import React from 'react'\r\nimport \"bootstrap/dist/css/bootstrap.min.css\"\r\nimport '../App.css';\r\n\r\n\r\n\r\nconst NavBar = () => {\r\n  return(\r\n    <nav class=\"navbar navbar-dark navbar-expand-lg navbar-light bg-dark\">\r\n    <a class=\"navbar-brand\" href=\"/\">Company Data</a>\r\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span class=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n  \r\n    <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul class=\"navbar-nav mr-auto\">\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link\" href=\"/Search\">Search</a>\r\n        </li>\r\n      \r\n      </ul>\r\n      \r\n    </div>\r\n  </nav>\r\n            \r\n  )\r\n}\r\n  \r\n\r\nexport default NavBar","import React from 'react';\r\nimport axios from 'axios';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport {BrowserRouter as Router} from 'react-router-dom';\r\nimport swal from 'sweetalert';\r\n\r\n\r\n\r\n\r\n\r\nimport './App.css';\r\n\r\n\r\n\r\n\r\n\r\n///options to use for MOU/NDA/IP\r\nconst options = [\r\n  {\r\n    label: \"None\",\r\n    value: \"None\",\r\n  },\r\n  {\r\n    label: \"Signed/Completed\",\r\n    value: \"Signed/Completed\",\r\n  },\r\n  {\r\n    label: \"Sent to Business\",\r\n    value: \"Sent to Business\",\r\n  },\r\n  {\r\n    label: \"Recieved\",\r\n    value: \"Recieved\",\r\n  }\r\n];\r\n//options for Phases\r\nconst options0 = [\r\n  {\r\n    label: \"None\",\r\n    value: \"None\",\r\n  },\r\n  {\r\n    label: \"Phase 1\",\r\n    value: \"Phase 1\",\r\n  },\r\n  {\r\n    label: \"Phase 2\",\r\n    value: \"Phase 2\",\r\n  },\r\n  {\r\n    label: \"Phase 3\",\r\n    value: \"Phase 3\",\r\n  }\r\n];\r\n\r\nconst options1 = [\r\n  {\r\n    label: \"None\",\r\n    value: \"None\",\r\n  },\r\n  {\r\n    label: \"On Going\",\r\n    value: \"On Going\",\r\n  },\r\n  {\r\n    label: \"Submitted\",\r\n    value: \"Submitted\",\r\n  },\r\n  {\r\n    label: \"Completed\",\r\n    value: \"Completed\",\r\n  },\r\n  {\r\n    label: \"Shaping\",\r\n    value: \"Shaping\",\r\n  },\r\n  {\r\n    label: \"Awarded\",\r\n    value: \"Awarded\",\r\n  }\r\n];\r\n\r\n\r\nclass Form extends React.Component {\r\n\r\n  //message that info has been sent, need to reconfigure incase the entry is a duplicate.\r\nonButtonCLickHandler = () => {\r\n  \r\n\r\n}\r\n//imported from Schema and saved as strings so you can view in Web App console to see the inputs being stored; also used for Payload//\r\n  state = {\r\n    smallBusiness: '',\r\n      address: '',\r\n      website: '',\r\n      companyTech: '',\r\n      poc: '',\r\n      emailinfo: '',\r\n      phoneinfo:'',\r\n      titleSTTR:'',\r\n      descripSTTR: '',\r\n      princInv: '',\r\n      businessSplit: '',\r\n      cctiSplit: '',\r\n      cctiprovide: '',\r\n      mou: '',\r\n      nda: '',\r\n      ipADD: '',\r\n      cycleSubmit: '',\r\n      topicID: '',\r\n      sttrID: '',\r\n      phaseType: '',\r\n      stateOfProject: '',\r\n      display: [],\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    this.getblogpost();\r\n  };\r\n//used for creating payload to send to MongoDB//\r\n  getblogpost = () => {\r\n    axios.get('/api')\r\n      .then((response) => {\r\n        const data = response.data;\r\n        this.setState({ posts: data });\r\n        console.log('Data has been received!!');\r\n      })\r\n      .catch(() => {\r\n        alert('Error retrieving data!!!');\r\n      });\r\n  }\r\n//Shows real time input from input boxes//\r\n  handleChange = ({ target }) => {\r\n    const { name, value } = target;\r\n    this.setState({ [name]: value });\r\n  \r\n  };\r\n\r\n\r\n  submit = (event) => {   \r\n    event.preventDefault();\r\n    \r\n//payload sent to Node.js to be posted in MongoDB//\r\n    const payload = {\r\n      smallBusiness: this.state.smallBusiness, \r\n      address: this.state.address, \r\n      website: this.state.website, \r\n      companyTech: this.state.companyTech,\r\n      poc: this.state.poc,\r\n      emailinfo: this.state.emailinfo ,\r\n      phoneinfo: this.state.phoneinfo,\r\n      titleSTTR: this.state.titleSTTR,\r\n      descripSTTR: this.state.descripSTTR,\r\n      princInv: this.state.princInv,\r\n      businessSplit: this.state.businessSplit, \r\n      cctiSplit: this.state.cctiSplit,\r\n      cctiprovide: this.state.cctiprovide,\r\n      mou: this.state.mou,\r\n      nda: this.state.nda,\r\n      ipADD: this.state.ipADD,\r\n      cycleSubmit: this.state.cycleSubmit,\r\n      topicID: this.state.topicID,\r\n      sttrID: this.state.sttrID, \r\n      phaseType: this.state.phaseType,\r\n      stateOfProject: this.state.project\r\n  \r\n    };\r\n\r\n//estabishing connection to Node.js and MongoDB//\r\n    axios({\r\n      url: '/api/save',\r\n      method: 'POST',\r\n      data: payload\r\n    })\r\n      .then(() => {\r\n        console.log('Data has been sent to the server');\r\n        this.resetUserInputs();\r\n        this.getblogpost();\r\n        swal('Information has been sent to Database', {\r\n          className: \"green-bg\",\r\n        })\r\n      })\r\n      .catch(() => {\r\n        swal('The Information was NOT sent to the Database' ,{\r\n          className: \"red-bg\",\r\n        });\r\n        console.log('Internal server error');\r\n      });;\r\n  };\r\n\r\n  resetUserInputs = () => {\r\n    this.setState({\r\n      smallBusiness: '',\r\n      address: '',\r\n      website: '',\r\n      companyTech: '',\r\n      poc: '',\r\n      emailinfo: '',\r\n      phoneinfo:'',\r\n      titleSTTR:'',\r\n      descripSTTR: '',\r\n      princInv: '',\r\n      businessSplit: '',\r\n      cctiSplit: '',\r\n      cctiprovide: '',\r\n      mou: '',\r\n      nda: '',\r\n      ipADD: '',\r\n      cycleSubmit: '',\r\n      topicID: '',\r\n      sttrID: '',\r\n      phaseType: '',\r\n      stateOfProject: '',\r\n    });\r\n  };\r\n  render() {\r\n\r\n    console.log('State: ', this.state);\r\n\r\n    \r\n\r\n    //JSX\r\n    return(\r\n \r\n<Router>\r\n    <div>\r\n  \r\n \r\n      {/* inputs for payload to be sent to DB */}\r\n      <div className=\"app\">\r\n     \r\n        <h1 className=\"header1\">Please fill out form below</h1>\r\n        <br></br>\r\n        <form onSubmit={this.submit}>\r\n         {/* input text box's for needed payload */}\r\n          <div className=\"form-input\">\r\n            <input \r\n              type=\"text\"\r\n              name=\"smallBusiness\"\r\n              placeholder=\"Enter Small Business Name\"\r\n              value={this.state.smallBusiness}\r\n              onChange={this.handleChange}\r\n            />\r\n          </div>\r\n  \r\n          <div className=\"form-input\">\r\n            <input \r\n              type=\"text\"\r\n              name=\"address\"\r\n              placeholder=\"Enter Address\"\r\n              value={this.state.address}\r\n              onChange={this.handleChange}\r\n            />\r\n          </div>\r\n         \r\n          <div className=\"form-input\">\r\n            <input \r\n              type=\"text\"\r\n              name=\"website\"\r\n              placeholder=\"Enter Website\"\r\n              value={this.state.website}\r\n              onChange={this.handleChange}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-input\">\r\n            <textarea\r\n              type=\"text\"\r\n              name=\"companyTech\"\r\n              placeholder=\"What Technology does the Company have\"\r\n              cols=\"25\"\r\n              rows=\"3\"\r\n              value={this.state.companyTech}\r\n              onChange={this.handleChange}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-input\">\r\n            <input\r\n              type=\"text\"\r\n              name=\"poc\"\r\n              placeholder=\"Company Point of Contact\"\r\n              value={this.state.poc}\r\n              onChange={this.handleChange}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-input\">\r\n            <input \r\n              type=\"text\"\r\n              name=\"emailinfo\"\r\n              placeholder=\"Enter Contact Information (email)\"\r\n              value={this.state.emailinfo}\r\n              onChange={this.handleChange}\r\n            />\r\n          </div>\r\n          <div className=\"form-input\">\r\n            <input \r\n              type=\"text\"\r\n              name=\"phoneinfo\"\r\n              placeholder=\"Enter Contact Information (Phone)\"\r\n              value={this.state.phoneinfo}\r\n              onChange={this.handleChange}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-input\">\r\n            <input \r\n              type=\"text\"\r\n              name=\"titleSTTR\"\r\n              placeholder=\"Enter the title of the STTR\"\r\n              value={this.state.titleSTTR}\r\n              onChange={this.handleChange}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-input\">\r\n            <textarea\r\n              placeholder=\"Enter the Description of the STTR\"\r\n              name=\"descripSTTR\"\r\n              cols=\"25\"\r\n              rows=\"3\"\r\n              value={this.state.descripSTTR}\r\n              onChange={this.handleChange}\r\n            >              \r\n            </textarea>\r\n          </div>\r\n\r\n          <div className=\"form-input\">\r\n            <input \r\n              type=\"text\"\r\n              name=\"princInv\"\r\n              placeholder=\"Enter the Principal Investigator\"\r\n              value={this.state.princInv}\r\n              onChange={this.handleChange}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-input\">\r\n            <input \r\n              type=\"number\"\r\n              name=\"businessSplit\"\r\n              placeholder=\"Enter in the Business Split\"\r\n              value={this.state.businessSplit}\r\n              onChange={this.handleChange}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-input\">\r\n            <input \r\n              type=\"number\"\r\n              name=\"cctiSplit\"\r\n              placeholder=\"What is CCTI's Split\"\r\n              value={this.state.cctiSplit}\r\n              onChange={this.handleChange}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-input\">\r\n            <input \r\n              type=\"text\"\r\n              name=\"cctiprovide\"\r\n              placeholder=\"What is CCTI providing\"\r\n              value={this.state.cctiprovide}\r\n              onChange={this.handleChange}\r\n            />\r\n          </div>\r\n         <div style={{clear:\"left\"}}>\r\n<h3 className=\"formHeader\" >Please Select Status</h3>\r\n\r\n\r\n        <label style= {{marginLeft:\"30%\", color:\"white\"}}>Select Status of MOU</label>\r\n          <div id= 'mou'>\r\n          <div className=\"select-Container\">\r\n            <select name=\"mou\" value={this.state.mou} onChange={this.handleChange}>\r\n              {options.map((option) => (\r\n                <option id= \"mou\" value={option.value}>{option.label}</option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n        </div>\r\n\r\n        <label style= {{marginLeft:\"30%\", color:\"white\"}}>Select Status of NDA</label>\r\n        <div id= 'NDA'>\r\n          <div className=\"select-Container\">\r\n            <select name=\"nda\" value={this.state.nda} onChange={this.handleChange}>\r\n              {options.map((option) => (\r\n                <option id= \"NDA\" value={option.value}>{option.label}</option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n        </div>\r\n\r\n        <label style= {{marginLeft:\"30%\", color:\"white\"}}>Select Status of IP</label>\r\n        <div id= 'ipADD'>\r\n          <div className=\"select-Container\">\r\n            <select name=\"ipADD\" value={this.state.ipADD} onChange={this.handleChange}>\r\n              {options.map((option) => (\r\n                <option id= \"ipADD\" value={option.value}>{option.label}</option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n       \r\n<br></br>\r\n<label style= {{marginLeft:\"30%\", color:\"white\"}}>Date the cycle was submitted</label>\r\n        <div className=\"form-input\">\r\n            <input \r\n              type=\"date\"\r\n              name=\"cycleSubmit\"\r\n              placeholder=\"Date the cycle was submitted\"\r\n              value={this.state.cycleSubmit}\r\n              onChange={this.handleChange}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-input\">\r\n            <input \r\n              type=\"text\"\r\n              name=\"topicID\"\r\n              placeholder=\"Enter Topic ID\"\r\n              value={this.state.topicID}\r\n              onChange={this.handleChange}\r\n            />\r\n          </div>\r\n         \r\n          <div className=\"form-input\">\r\n            <input \r\n              type=\"text\"\r\n              name=\"sttrID\"\r\n              placeholder=\"Enter STTR ID\"\r\n              value={this.state.sttrID}\r\n              onChange={this.handleChange}\r\n            />\r\n          </div>\r\n          <label style= {{marginLeft:\"30%\", color:\"white\"}}>Select Phase </label>\r\n        <div id= 'phaseType'>\r\n          <div className=\"select-Container\">\r\n            <select name=\"phaseType\" value={this.state.phaseType} onChange={this.handleChange}>\r\n              {options0.map((option) => (\r\n                <option id= \"phaseType\" value={option.value}>{option.label}</option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n        </div>\r\n\r\n        <label style= {{marginLeft:\"30%\", color:\"white\"}}>Select State of the Project</label>\r\n        <div id= 'stateOfProject'>\r\n          <div className=\"select-Container\">\r\n            <select name=\"stateOfProject\" value={this.state.stateOfProject} onChange={this.handleChange}>\r\n              {options1.map((option) => (\r\n                <option id= \"stateOfProject\" value={option.value}>{option.label}</option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n          <br></br>\r\n          </div>\r\n        </div>\r\n</div>\r\n          <button onClick={this.onButtonCLickHandler} >Submit</button>\r\n        </form>\r\n        \r\n      \r\n</div>\r\n   \r\n      </div>\r\n      </Router>\r\n    \r\n    );\r\n  \r\n  }\r\n \r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default Form;","import React from 'react';\nimport axios from 'axios';\n\n// This was an important Select component that looked nicer but was unable to pull data from it: \n// import Select from \"react-dropdown-select\";\n\nimport './App.css';\n\n// Below is a list of options for the hard coded dropdown menus: \nconst mouOptions = [\n  { value: \"None\", label: \"None\"},\n  { value: \"Signed/Completed\", label: \"Signed/Completed\"},\n  { value: \"Sent to Business\", label: \"Sent to Business\"}, \n  { value: \"Recieved\", label: \"Recieved\"}\n  \n]\n\nconst ndaOptions = [\n  { value: \"None\", label: \"None\"},\n  { value: \"Signed/Completed\", label: \"Signed/Completed\"},\n  { value: \"Sent to Business\", label: \"Sent to Business\"}, \n  { value: \"Recieved\", label: \"Recieved\"}, \n]\n\nconst ipOptions = [\n  { value: \"None\", label: \"None\"},\n  { value: \"Signed/Completed\", label: \"Signed/Completed\"},\n  { value: \"Sent to Business\", label: \"Sent to Business\"}, \n  { value: \"Recieved\", label: \"Recieved\"},\n]\n\nconst phaseOptions = [\n  { value: \"None\", label: \"None\"}, \n  { value: \"Phase 1\", label: \"Phase 1\"}, \n  { value: \"Phase 2\", label: \"Phase 2\"}, \n  { value: \"Phase 3\", label: \"Phase 3\"}\n\n]\n\nconst stateOptions = [ \n  {\n    label: \"None\",\n    value: \"None\",\n  },\n  {\n    label: \"On Going\",\n    value: \"On Going\",\n  },\n  {\n    label: \"Submitted\",\n    value: \"Submitted\",\n  },\n  {\n    label: \"Completed\",\n    value: \"Completed\",\n  },\n  {\n    label: \"Shaping\",\n    value: \"Shaping\",\n  },\n  {\n    label: \"Awarded\",\n    value: \"Awarded\",\n  }\n]\n\nconst criteriaOptions = [\n  {value: \"None\", label: \"None\"}, \n  {value: \"Business Name\", label: \"Business Name\"}, \n  {value: \"MOU\", label: \"MOU\"}, \n  {value: \"NDA\", label: \"NDA\"}, \n  {value: \"IP\", label: \"IP\"}, \n  {value: \"Phase\", label: \"Phase\"}, \n  {value: \"State of Project\", label: \"State of Project\"}\n]\n\nclass Search extends React.Component {\n\n\n  state = {\n    title: '',\n    value: '', \n    posts: [],\n    // This only pulls the small business names for a dynamic view of what businesses are added to the database: \n    justTitles: [],\n    justMous: [],\n    justNda: [], \n    justIp: [], \n    justPhase: [], \n    justState: [],\n    criteria: '', \n    smallBusiness: '',\n    mou: '', \n    nda: '', \n    ip: '', \n    phase: '', \n    stateOfProject: '',\n    query: []\n  };\n\n  \n  \n// This function will dynamically add the group titles to the dropdown menu so that when new groups are added that will\n// pupulate in the dopdown. This is achieved by passing the posts array and an array with just titles into the function\n// and returning the individual titles to the option array. Finally we simply pass this to the option array and return it\n  titles = (posts, justTitles) => { \n    posts.map((post, index) => ( \n      justTitles[index] = post.smallBusiness\n    ));\n    var options = []; \n    options[0] = \"\"\n    for (var i = 0; i < justTitles.length; i++) { \n      options[i] = { value: justTitles[i], label: justTitles[i] }\n      \n    }\n    return options\n    \n  };\n\n  componentDidMount = () => {  \n    this.getBlogPost();\n  }\n  handleChange1 = ({ target }) => { \n    const { name, value } = target;\n    this.setState({ [name]: value })\n    this.resertUserInputs()\n  };\n\n  handleChange = ({ target }) => { \n    const { name, value } = target;\n    this.setState({ [name]: value })\n  };\n  // retrieves the posts from the /api route in the api.js file\n  getBlogPost = () => { \n    axios.get('/api')\n      .then((response) => { \n        const data = response.data;\n        this.setState({ posts: data })\n        console.log(\"Data has been recieved!!\");\n      })\n      .catch(() => { \n        alert('Error retrieving data!!');\n      })\n  }\n\n  // Used to submit data to the database\n  submit = (event) => {\n    event.preventDefault();\n\n    const payload = {\n      title: this.state.title,\n      body: this.state.body,\n      smallbusiness: this.state.smallBusiness,\n      mou: this.state.mou,\n      nda: this.state.nda, \n      ip: this.state.ip, \n      phase: this.state.phase, \n      stateOfProject: this.state.stateOfProject\n    };\n\n    axios({\n      url: '/api/save',\n      method: 'POST',\n      data: payload\n    })\n      .then(() => {\n        console.log('Data has been sent to the server');\n        this.resertUserInputs();\n        this.getBlogPost();\n      })\n      .catch(() => {\n        console.log('Internal server error');\n      });\n  }\n\n  displayBlogPost = (posts) => { \n    if (!posts.length) return null; \n\n    return posts.map((post, index) => ( \n      <div key={index} className=' t_display'>\n        <h3>{post.title}</h3>\n        <p>{post.body}</p>\n      </div>\n      \n    ));\n  };\n\n  displayTitles(posts) { \n    if (!posts.length) return null; \n\n    return posts.map((post, index) => ( \n      <div className=' t_display'>\n        <options>{post.title}</options>\n      </div>\n    ));\n  };\n\n  resertUserInputs = () => {\n    this.setState({\n      value: ''\n    });\n  };\n\n  justMous = (posts, justMous) => { \n    posts.map((post, index) => ( \n      justMous[index] = post.mou\n    ));\n    var options = []; \n    for (var i = 0; i < justMous.length; i++) { \n      options[i] = { value: justMous[i], label: justMous[i] }\n      \n    }\n    return options\n    \n  };\n  justNda = (posts, justNda) => { \n    posts.map((post, index) => ( \n      justNda[index] = post.nda\n    ));\n    var options = []; \n    for (var i = 0; i < justNda.length; i++) { \n      options[i] = { value: justNda[i], label: justNda[i] }\n      \n    }\n    return options\n    \n  };\n  justIp = (posts, justIp) => { \n    posts.map((post, index) => ( \n      justIp[index] = post.ip\n    ));\n    var options = []; \n    for (var i = 0; i < justIp.length; i++) { \n      options[i] = { value: justIp[i], label: justIp[i] }\n      \n    }\n    return options\n    \n  };\n  justPhase = (posts, justPhase) => { \n    posts.map((post, index) => ( \n      justPhase[index] = post.phase\n    ));\n    var options = []; \n    for (var i = 0; i < justPhase.length; i++) { \n      options[i] = { value: justPhase[i], label: justPhase[i] }\n      \n    }\n    return options\n    \n  };\n  justState = (posts, justState) => { \n    posts.map((post, index) => ( \n      justState[index] = post.stateOfProject\n    ));\n    var options = []; \n    for (var i = 0; i < justState.length; i++) { \n      options[i] = { value: justState[i], label: justState[i] }\n      \n    }\n    return options\n    \n  };\n  displayBusiness(counts, mouBusiness) { \n    return  mouBusiness.map((index) => (\n      <li>{index}</li>\n    ))\n  \n  };\n  \n  displayQuery(state, posts) {  \n    // This will denote where in the database the rest of the data should be pulled\n    var count; \n    // This will be used to hold more than one index for columns that have duplicates like MOU, NDA, and IP\n    var counts = [];\n    // This holds the Business Names that correspond to the MOU slected\n    var mouBusiness = []\n    var ndaBusiness = []\n    var ipBusiness = []\n    var phaseBusiness = []\n    var stateBusiness = []\n    const tempBusiness = []\n    const tempMou = []\n    const tempNda = []\n    const tempIp = []\n    const tempPhase = []\n    const tempState = []\n\n    posts.map((post, index) => ( \n      tempBusiness[index] = post.smallBusiness\n    ))\n    posts.map((post, index) => ( \n      tempMou[index] = post.mou\n    ))\n    posts.map((post, index) => ( \n      tempNda[index] = post.nda\n    ))\n    posts.map((post, index) => ( \n      tempIp[index] = post.ipADD\n    ))\n    posts.map((post, index) => ( \n      tempPhase[index] = post.phaseType\n    ))\n    posts.map((post, index) => ( \n      tempState[index] = post.stateOfProject\n    ))\n\n    if (state.criteria === \"\") { \n      return null; \n    }\n    else if (state.criteria === \"Business Name\") { \n      for (var i = 0; i < tempBusiness.length; i++) {\n        if (tempBusiness[i] === state.value) {\n          count = i; \n        }\n      }\n      return (\n        <div>\n          <h2 className=\"searchcomp\">{state.criteria}</h2> \n          <p>{state.value}</p>\n          <h2 className=\"searchcomp\">MOU: </h2>\n          <p>{tempMou[count]}</p>\n          <h2 className=\"searchcomp\">NDA: </h2>\n          <p>{tempNda[count]}</p>\n          <h2 className=\"searchcomp\">IP: </h2>\n          <p>{tempIp[count]}</p>\n          <h2 className=\"searchcomp\">Phase: </h2>\n          <p>{tempPhase[count]}</p>\n          <h2 className=\"searchcomp\">State of Project: </h2>\n          <p>{tempState[count]}</p>\n\n          \n        </div>\n      )\n    }\n    else if (state.criteria === \"MOU\") { \n      for (i = 0; i < tempMou.length; i++) {\n        if (tempMou[i] === state.value) {\n          mouBusiness[i] = tempBusiness[i]\n          counts = tempMou[i]\n        }\n      }\n      \n      return ( \n        <div>\n          <h2 className=\"searchcomp\">Business Names: </h2>\n          <ul className=\" t__display\">{this.displayBusiness(counts, mouBusiness)}</ul>\n          <h2>{state.criteria}: </h2>\n          <p>{state.value}</p>\n        \n        </div>\n      )\n    }\n    else if (state.criteria === \"NDA\") { \n      for (i = 0; i < tempNda.length; i++) {\n        if (tempNda[i] === state.value) {\n          ndaBusiness[i] = tempBusiness[i]\n          counts = tempNda[i]\n        }\n      }\n      return (\n        <div> \n          <h2 className=\"searchcomp\">Business Names: </h2>\n          <ul className=\" t__display\">{this.displayBusiness(counts, ndaBusiness)}</ul>\n          <h2>{state.criteria}</h2>\n          <p>{state.value}</p>\n          \n        </div>\n      )\n    }\n    else if (state.criteria === \"IP\") {\n      for (i = 0; i < tempIp.length; i++) {\n        if (tempIp[i] === state.value) {\n          ipBusiness[i] = tempBusiness[i]\n          counts = tempIp[i]\n        }\n      }\n      return ( \n        <div>\n          <h2 className=\"searchcomp\">Business Names: </h2>\n          <ul className=\" t__display\">{this.displayBusiness(counts, ipBusiness)}</ul>\n          <h2>{state.criteria}</h2>\n          <p>{state.value}</p>\n        </div>\n      )\n    }\n    else if (state.criteria === \"Phase\") { \n      for (i = 0; i < tempPhase.length; i++) {\n        if (tempPhase[i] === state.value) {\n          phaseBusiness[i] = tempBusiness[i]\n          counts = tempPhase[i]\n        }\n      }\n      return ( \n        <div>\n          <h2 className=\"searchcomp\">Business Names: </h2>\n          <ul className=\" t__display\">{this.displayBusiness(counts, phaseBusiness)}</ul>\n          <h2>{state.criteria}</h2>\n          <p>{state.value}</p>\n          \n        </div>\n      )\n    }\n    else if (state.criteria === \"State of Project\") { \n      for (i = 0; i < tempState.length; i++) {\n        if (tempState[i] === state.value) {\n          stateBusiness[i] = tempBusiness[i]\n          counts = tempState[i]\n        }\n      }\n      return ( \n        <div>\n          <h2 className=\"searchcomp\">Business Names: </h2>\n          <ul className=\" t__display\">{this.displayBusiness(counts, stateBusiness)}</ul>\n          <h2>{state.criteria}</h2>\n          <p>{state.value}</p>\n        </div>\n      )\n    }\n  }\n \n  fieldDropdown = (criteria) => { \n    if (criteria === \"\") {\n      console.log(criteria)\n      console.log(\"No fields selected\")\n      return ( \n          <option>None</option>\n      ) \n    }\n    else if (criteria === \"Business Name\") { \n      return (\n          this.titles(this.state.posts, this.state.justTitles).map((option) => (\n            <option value={option.value}>{option.label}</option>\n          ))\n      )\n    }\n    else if (criteria === \"MOU\") { \n      return (\n        mouOptions.map((option) => (\n          <option value={option.value}>{option.label}</option>\n        ))\n      )\n    }\n    else if (criteria === \"NDA\") {\n      return (\n        ndaOptions.map((option) => (\n          <option value={option.value}>{option.label}</option>\n         ))\n      )\n    }\n    else if (criteria === \"IP\") { \n      return (\n        ipOptions.map((option) => (\n          <option value={option.value}>{option.label}</option>\n        ))\n        \n      )\n    }\n    else if (criteria === \"Phase\") { \n      return (\n         phaseOptions.map((option) => (\n          <option value={option.value}>{option.label}</option>\n         ))\n      )\n    }\n    else if (criteria === \"State of Project\") { \n      return (\n        stateOptions.map((option) => (\n          <option value={option.value}>{option.label}</option>\n        ))\n      )\n    }\n  }\n\n  render() {\n\n    console.log('State: ', this.state);\n    //JSX\n    return(\n      <div className=\"searchbg\">\n        <h1 className=\"search1\" >Search The Catalyst Campus Database Database</h1>\n        <br></br>\n        <br></br>\n\n        \n        <form>\n          <h2 className=\"search1\">Select a Criteria:</h2>\n          <div className=\"dropdown\">\n            <select value={this.state.criteria} name=\"criteria\" onChange={this.handleChange1}>\n              {criteriaOptions.map((option) => (\n                <option value={option.value}>{option.label}</option>\n              ))}\n            </select>\n          </div>\n          <h2 className=\"search1\">Select your field: </h2>\n\n          <select value={this.state.value} name=\"value\" onChange={this.handleChange}>\n            {this.fieldDropdown(this.state.criteria)}\n          </select> \n          <p></p>\n\n        </form>\n<br></br>\n      <div id=\"queryResults\">\n        <h3 className=\"search2\">Your data here: </h3>\n        <br></br>\n        <ul>\n          {this.displayQuery(this.state, this.state.posts)}\n\n        </ul>\n      </div>\n\n      </div>\n\n      \n    );\n  }\n}\n\nexport default Search;","import React from 'react';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport NavBar from './Components/navbar';\nimport { BrowserRouter as Router, Route, Switch} from 'react-router-dom';\n\n\n\n\n\nimport './App.css';\n//functions or classes need to render pages\nimport Form from './form';\nimport Search from './Search';\n\n\n\nclass App extends React.Component {\nrender() {\n  return (\n    \n  <div>\n    <Router>\n      <NavBar />\n    <Switch>\n              <Route exact path='/' component={Form}></Route>\n              <Route exact path='/Search' component={Search}></Route>\n            </Switch>\n    </Router>\n    \n  </div>\n\n  )\n}\n}\n\n\n\n\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\n\nReactDOM.render(<App/>,document.getElementById('root')\n);\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}